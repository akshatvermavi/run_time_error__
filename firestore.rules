rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	match /databases/{database}/documents{
  	//DONT REALLY DO THIS
  	allow read, write: if true;
  	}
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    // for profile
    match /users/{userId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
    match /stories/{story} {
      function isSignedIn() {
        return request.auth.uid != null;
      }
    
      allow read, write: if isSignedIn() && request.auth.uid == resource.data.uid
    }
  	match /messages/{message} {
      allow read, write: if request.auth != null;
    }
    // Allow read and write access to a user's own data
		match /users/{userId} {
  		allow read, write: if request.auth != null && request.auth.uid == userId;
		}
		// Allow users to upload files inside their own folders
		match /users/{userId}/folders/{folderId}/{document=**} {
  		allow read, write: if request.auth != null && request.auth.uid == userId;
      
      match /{document} {
    		allow read: if request.auth != null && request.auth.uid == userId;
    		allow write: if request.auth != null && request.auth.uid == userId;
  		}
		}
     match /posts/{postId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
      match /post/comments/{commentId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
     match /post/like/{likeId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    //for fetching data for applauses page
    //   match /comments/{document} {
    //   allow read: if request.auth != null;
    // }
    match /comments/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // match /posts/{postId} {
    //   allow read, write: if request.auth != null;
    // }
    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    //
    //  match /schools/{schoolId} {
    //   allow read, write: if true;
    // }	
    // match /schools/{userId} {
    //   allow read, write: if request.auth.uid == userId;
    // }
     match /schools/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /schools/{userId} {
      // Allow authenticated users to read and write documents in the schools collection
      allow read, write: if request.auth != null;

      // Allow authenticated users to read and write subcollections within a school document
      match /{document=**} {
        allow read, write: if request.auth != null;
      }
    }
    // match /users/{userId} {
    //       allow read, write: if request.auth != null && request.auth.uid == userId;
    //     }
    match /b/{bucket}/o {
        match /userProfilePictures/{userId}/{allPaths=**} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }
    match /{document=**} {
      //allow read, write: if request.time < timestamp.date(2024, 2, 22);
      //allow read, write: if request.auth != null;
      //allow read: if true;
      allow read: if request.auth != null;
    }
    match /Database/{document=**} {
      allow write: if request.auth != null;
    }
    //  match /{document=**} {
    //   allow read: if true;
    // }
    
    // // Allow write access to the 'schools' collection for authenticated users
    // match /schools/{document=**} {
    //   allow read, write: if request.auth != null;
    // }
  }
}